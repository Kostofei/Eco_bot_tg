from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery
from config import CONFIG
from keyboards.inline.general import UserCallbackData
from keyboards.inline.calculation_savings_ikb import generate_inline_keyboard, confirm_ikb
from utils.channel import is_subscription
from utils.queue import queue
from models import User, SavingCalculation

calculation_router = Router()


@calculation_router.callback_query(UserCallbackData.filter((F.target == "Calculation") & (F.action == "main")))
async def calculation_saving(callback: CallbackQuery, callback_data: UserCallbackData, state: FSMContext):
    await callback.message.delete()

    callback_data.user_id = callback.from_user.id
    callback_data.chat_id = CONFIG.CHAT_ID

    result = await is_subscription(callback=callback, callback_data=callback_data)

    if result:
        user = await User.get(pk=callback.from_user.id)
        calculation = await SavingCalculation.all(user_id=user.id)

        if calculation:
            await callback.message.answer(
                text="–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–∞—Å—á–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∏\n\n"
                     f"–ú—É–∂—á–∏–Ω - {calculation[0].men}\n"
                     f"–ñ–µ–Ω—â–∏–Ω - {calculation[0].women}\n"
                     f"–î–µ—Ç–µ–π –¥–æ 5 –ª–µ—Ç - {calculation[0].children_under_5_yo}\n\n"
                     f"–î–µ—Ç–µ–π –æ—Ç 5 –¥–æ 14 –ª–µ—Ç - {calculation[0].children_after_5_yo}\n\n"
                     f"–ñ–µ–ª–∞–µ—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç?",
                reply_markup=await confirm_ikb(callback_data=callback_data)
            )
        else:
            await state.clear()

            callback_data.gift = None
            callback_data.dialog_id = None
            callback_data.chat_id = None
            callback_data.user_id = None
            callback_data.action = "man"
            callback_data.details = "man"

            await callback.message.answer(
                text='‚úÖ –¢–≤–æ—è  –∑–∞—è–≤–∫–∞ –Ω–∞ "–†–∞—Å—á–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∏" –ø—Ä–∏–Ω—è—Ç–∞\n'
                     'üéÅ –ê —Ç–∞–∫–∂–µ —Ç–µ–±—è –∂–¥—ë—Ç –ø—Ä–∏—è—Ç–Ω—ã–π –ë–û–ù–£–°\n'
                     'üëâ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è  –±—ã–ª–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –æ—Ç–≤–µ—Ç—å, '
                     ' –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —Å–æ—Å—Ç–∞–≤–µ —Å–µ–º—å–∏\n\n'
                     '–°–∫–æ–ª—å–∫–æ –º—É–∂—á–∏–Ω —Å—Ç–∞—Ä—à–µ 14 –ª–µ—Ç',
                reply_markup=await generate_inline_keyboard(callback_data=callback_data),
                parse_mode="HTML"
            )


@calculation_router.callback_query(UserCallbackData.filter((F.target == "Calculation") & (F.action == "man")))
async def calculation_men(
        callback: CallbackQuery,
        state: FSMContext,
        callback_data: UserCallbackData,
):
    await state.update_data(man=callback_data.details)

    callback_data.action = "woman"
    callback_data.details = "woman"

    await callback.message.edit_text(
        text="–°–∫–æ–ª—å–∫–æ –∂–µ–Ω—â–∏–Ω —Å—Ç–∞—Ä—à–µ 14 –ª–µ—Ç",
        reply_markup=await generate_inline_keyboard(callback_data=callback_data),
        parse_mode="HTML"
    )


@calculation_router.callback_query(UserCallbackData.filter((F.target == "Calculation") & (F.action == "woman")))
async def calculation_women(
        callback: CallbackQuery,
        state: FSMContext,
        callback_data: UserCallbackData,
):
    await state.update_data(woman=callback_data.details)

    callback_data.action = "children_do5"
    callback_data.details = "children_do5"

    await callback.message.edit_text(
        text="–°–∫–æ–ª—å–∫–æ –¥–µ—Ç–µ–π –¥–æ 5-—Ç–∏ –ª–µ—Ç",
        reply_markup=await generate_inline_keyboard(callback_data=callback_data),
        parse_mode="HTML"
    )


@calculation_router.callback_query(UserCallbackData.filter((F.target == "Calculation") & (F.action == "children_do5")))
async def calculation_women(
        callback: CallbackQuery,
        state: FSMContext,
        callback_data: UserCallbackData,
):
    await state.update_data(children_under_5_yo=callback_data.details)

    callback_data.action = "children_do14"
    callback_data.details = "children_do14"

    await callback.message.edit_text(
        text="–°–∫–æ–ª—å–∫–æ –¥–µ—Ç–µ–π –æ—Ç 5 –¥–æ 14 –ª–µ—Ç",
        reply_markup=await generate_inline_keyboard(callback_data=callback_data),
        parse_mode="HTML"
    )


@calculation_router.callback_query(UserCallbackData.filter((F.target == "Calculation") & (F.action == "children_do14")))
async def calculation_children(
        callback: CallbackQuery,
        state: FSMContext,
        callback_data: UserCallbackData,
):
    data = await state.get_data()
    user = await User.get(pk=callback.from_user.id)
    calculation = await SavingCalculation.all(user_id=user.id)

    if calculation:
        await calculation[0].delete()

    calculation = SavingCalculation(
        men=str(data['man']),
        women=str(data['woman']),
        children_under_5_yo=str(data['children_under_5_yo']),
        children_after_5_yo=str(callback_data.details),
        user_id=user.id
    )
    await calculation.save()

    await state.clear()

    send_text = "–û–ø—Ä–æ—Å –Ω–∞ —Ä–∞—Å—á–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∏ –ø—Ä–æ–π–¥–µ–Ω\n\n" \
                f"–º—É–∂—á–∏–Ω - {str(data['man'])}\n"\
                f"–∂–µ–Ω—â–∏–Ω - {str(data['woman'])}\n"\
                f"–î–µ—Ç–µ–π –¥–æ 5 –ª–µ—Ç - {str(data['children_under_5_yo'])}\n\n"\
                f"–î–µ—Ç–µ–π –æ—Ç 5 –¥–æ 14 –ª–µ—Ç - {str(callback_data.details)}\n\n"

    callback_data.user_id = callback.from_user.id
    callback_data.details = send_text

    await queue(callback=callback, callback_data=callback_data)


@calculation_router.callback_query(UserCallbackData.filter((F.target == "Calculation") & (F.action == "confirm")))
async def calculation_confirm_men(
        callback: CallbackQuery,
        callback_data: UserCallbackData,
        state: FSMContext
):
    await state.clear()

    callback_data.gift = None
    callback_data.dialog_id = None
    callback_data.chat_id = None
    callback_data.user_id = None
    callback_data.action = "man"
    callback_data.details = "man"

    await callback.message.edit_text(
        text='‚úÖ –¢–≤–æ—è  –∑–∞—è–≤–∫–∞ –Ω–∞ "–†–∞—Å—á–µ—Ç —ç–∫–æ–Ω–æ–º–∏–∏" –ø—Ä–∏–Ω—è—Ç–∞\n'
             'üéÅ –ê —Ç–∞–∫–∂–µ —Ç–µ–±—è –∂–¥—ë—Ç –ø—Ä–∏—è—Ç–Ω—ã–π –ë–û–ù–£–°\n'
             'üëâ –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏—è  –±—ã–ª–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –æ—Ç–≤–µ—Ç—å,'
             ' –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —Å–æ—Å—Ç–∞–≤–µ —Å–µ–º—å–∏\n\n'
             '–°–∫–æ–ª—å–∫–æ –º—É–∂—á–∏–Ω —Å—Ç–∞—Ä—à–µ 14 –ª–µ—Ç',
        reply_markup=await generate_inline_keyboard(callback_data=callback_data),
        parse_mode="HTML"
    )
